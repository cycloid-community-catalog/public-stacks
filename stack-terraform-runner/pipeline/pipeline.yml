groups:
- name: overview
  jobs:
  - terraform-plan
  - terraform-apply

- name: destroy
  jobs:
  - terraform-destroy

resource_types:

- name: terraform
  type: registry-image
  source:
    repository: cycloid/terraform-resource
    tag: ((terraform_version))

resources:

- name: tfstate
  type: terraform
  icon: terraform
  source:
    backend_type: http
    backend_config:
      address: '($ .api_url $)/inventory?jwt=($ .inventory_jwt $)'
      skip_cert_verification: true
    env_name: ($ .environment $)
    private_key: ((terraform_modules_private_key))
    vars:
      env: ($ .environment $)
      project: ($ .project $)
      organization: ($ .organization $)
      component: ($ .component $)
($- if eq .use_case "default" $)
      aws_cred: ((aws_cred))
      aws_region: ((aws_default_region))
($- else if eq .use_case "azure" $)
    vars:
      azure_env: ((azure_env))
      azure_cred: ((azure_cred))
      azure_location: ((azure_location))
($- else if eq .use_case "gcp" $)
    vars:
      gcp_project: ((gcp_project))
      gcp_zone: ((gcp_zone))
    env:
      GOOGLE_PROJECT: ((gcp_project))
      GOOGLE_ZONE: ((gcp_zone))
      GOOGLE_CREDENTIALS: ((gcp_credentials_json))
($- end $)

- name: git_terraform
  type: git
  icon: git
  source:
    uri: ((git_repository))
    branch: ((git_branch))
    private_key: ((git_private_key))
    paths:
      - ((git_terraform_path))

jobs:

- name: terraform-plan
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_terraform
        trigger: true

      - put: tfstate
        params:
          plan_only: true
          terraform_source: git_terraform/((git_terraform_path))/

- name: terraform-apply
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_terraform
        trigger: false
        passed:
          - terraform-plan
      - get: tfstate
        trigger: false
        passed:
          - terraform-plan

      - put: tfstate
        params:
          plan_run: true
          terraform_source: git_terraform/((git_terraform_path))/

- name: terraform-destroy
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
        - get: git_terraform
          trigger: false

        - put: tfstate
          params:
            action: destroy
            terraform_source: git_terraform/((git_terraform_path))/
          get_params:
            action: destroy

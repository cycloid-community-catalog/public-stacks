---
shared:
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
      - name: merged-stack
        path: "merged-stack"

groups:
  - name: overview
    jobs:
      - terraform-plan
      - terraform-apply
      - deploy
  - name: destroy
    jobs:
      - terraform-destroy

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: ((terraform_version))

resources:
  # ansible config (will be merged with the stack)
  - name: git_ansible
    type: git
    icon: github-circle
    source:
      uri: ((git_repository))
      branch: ((git_branch))
      private_key: ((git_private_key))
      paths:
        - ((git_ansible_path))

  # stack ansible
  - name: git_stack-ansible
    type: git
    icon: github-circle
    source:
      uri: https://github.com/cycloid-community-catalog/stack-jenkins
      branch: stacks
      paths:
        - ansible/*

  # terraform config (will be merged with the stack)
  - name: git_terraform
    type: git
    icon: github-circle
    source:
      uri: ((git_repository))
      branch: ((git_branch))
      private_key: ((git_private_key))
      paths:
        - ((git_terraform_path))

  # stack terraform
  - name: git_stack-terraform
    type: git
    icon: github-circle
    source:
      uri: https://github.com/cycloid-community-catalog/stack-jenkins
      branch: stacks
      paths:
        - terraform/*

  - name: tfstate
    type: terraform
    icon: terraform
    source:
      env_name: ((env))
      backend_type: s3
      backend_config:
        bucket: ((terraform_storage_bucket_name))
        key: ((project))-((env)).tfstate
        workspace_key_prefix: ((project))
        region: ((aws_default_region))
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
        env: ((env))
        project: ((project))
        customer: ((customer))
        aws_region: ((aws_default_region))
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_DEFAULT_REGION: ((aws_default_region))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))
jobs:

  # Merge and trigger a plan whenever there is a commit in Terraform stack or config
  - name: terraform-plan
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_terraform
            trigger: true

          - get: git_stack-terraform
            trigger: true

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((git_terraform_path))
              STACK_PATH: terraform

          - put: tfstate
            params:
              plan_only: true
              terraform_source: merged-stack/

  # Merge and trigger an apply manually (no autostart of this job)
  - name: terraform-apply
    serial: true
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_terraform
            trigger: false
            passed:
              - terraform-plan

          - get: git_stack-terraform
            trigger: false
            passed:
              - terraform-plan

          - get: tfstate
            trigger: false
            passed:
              - terraform-plan

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((git_terraform_path))
              STACK_PATH: terraform

          - put: tfstate
            params:
              plan_run: true
              terraform_source: merged-stack/

  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_terraform
            trigger: false

          - get: git_stack-terraform
            trigger: false

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((git_terraform_path))
              STACK_PATH: terraform

          - put: tfstate
            params:
              action: destroy
              terraform_source: merged_stack/
            get_params:
              action: destroy

  - name: deploy
    serial: true
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_ansible
            params: {depth: 1}
            trigger: true

          - get: git_stack-ansible
            params: {depth: 1}
            trigger: true

          - get: tfstate
            trigger: true
            passed:
              - terraform-apply

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_ansible
                  path: "config"
                - name: git_stack-ansible
                  path: "stack"
            params:
              CONFIG_PATH: ((git_ansible_path))
              STACK_PATH: ansible

          - task: run-ansible
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cycloid/cycloid-toolkit
                  tag: ((ansible_version))
              run:
                path: /usr/bin/ansible-runner
              caches:
                - path: ansible-playbook/roles
              inputs:
                - name: merged-stack
                  path: ansible-playbook
            params: ((ansible_params))

shared:
  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    #run:
    #  path: /usr/bin/merge-stack-and-config
    run:
      path: /bin/sh
      args:
      - -c
      - |
        /usr/bin/merge-stack-and-config
        if [[ "$TAG_COMMIT_ID" == "true" ]]; then
          echo ${EXTRA_TAGS} $(cat config/.git/short_ref) > merged-stack/.ci/TAGS
        else
          echo ${EXTRA_TAGS} > merged-stack/.ci/TAGS
        fi
        if [ -n "$BUILD_ARGS" ] && [[ "$BUILD_ARGS" != "null" ]]; then
          python -c "import json, os, yaml; print('\n'.join([ '%s=%s' % (k,v) for k, v in json.loads(os.environ['BUILD_ARGS'].replace('\\n','\\\\\\\n')).items()]))" >> merged-stack/.ci/build_args_file
        fi
    outputs:
      - name: merged-stack

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource
      tag: v0.15.0

resources:
  - name: git_stack
    type: git
    icon: git
    source:
      uri: https://github.com/cycloid-community-catalog/stack-dockerbuild
      branch: ($ .scs_branch $)
      paths:
        - docker/*

  - name: pull-request
    type: pull-request
    icon: github-circle
    source:
      repository: ((code_git_repository))
      access_token: ((code_github_access_token))

jobs:
  - name: build
    max_in_flight: 1
    build_logs_to_retain: 3
    plan:
    - in_parallel:
      - get: git_stack
        trigger: true
      - get: pull-request
        trigger: true
        version: every
        params:
          integration_tool: checkout

    - put: pull-request
      params:
        base_context: cycloid-ci
        context: build
        path: pull-request
        status: pending
        target_url: 'https://console.cycloid.io/organizations/($ .organization_canonical $)/projects/($ .project $)/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_ID'

    - task: merge-stack-and-config
      config:
        <<: *merge-stack-and-config
        inputs:
          - name: pull-request
            path: config
          - name: git_stack
            path: stack
      params:
        CONFIG_PATH: ((code_build_context))
        STACK_PATH: docker
        EXTRA_TAGS: ((registry_extra_tags))
        BUILD_ARGS: ((code_build_args))
        TAG_COMMIT_ID: ((registry_tag_commit_id))

    - task: tests
      file: merged-stack/.ci/tests.yml
      privileged: true

    - task: build
      file: merged-stack/.ci/build.yml
      privileged: true
      params:
        CONTEXT: merged-stack
        DOCKERFILE: merged-stack/((code_dockerfile_location))
        BUILD_ARGS_FILE: merged-stack/.ci/build_args_file

    - task: post-tests
      file: merged-stack/.ci/post-tests.yml
      privileged: true
      params:
        TAG: ((registry_tag))
        REPOSITORY: ((registry_image_name))

    on_failure:
      put: pull-request
      params:
        base_context: cycloid-ci
        context: build
        path: pull-request
        status: failure
        target_url: 'https://console.cycloid.io/organizations/($ .organization_canonical $)/projects/($ .project $)/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_ID'
    on_success:
      put: pull-request
      params:
        base_context: cycloid-ci
        context: build
        path: pull-request
        status: success
        target_url: 'https://console.cycloid.io/organizations/($ .organization_canonical $)/projects/($ .project $)/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_ID'

---
version: '2'
# Configuration of the Cycloid stack
name: 'Cycloid worker'
canonical: 'stack-cycloid-worker'
status: 'public'
description: |
  This stack will deploy a single Cycloid worker in a new VPC.
keywords:
  - 'workers'
  - 'worker'
  - 'concourse'
  - 'cycloid'
  - 'provider:aws'
author: 'Cycloid'
image: |
  https://cycloid-demo-stacks-logo.s3.eu-west-1.amazonaws.com/concourse.png
technologies:
  - technology: concourse
    version: n/a

config:
  aws:
    name: 'AWS'
    description: 'Deployment on Amazon Web Services.'
    cloud_provider: aws
    # Configuration of the CI pipeline
    pipeline:
      pipeline:
        path: 'pipeline/aws/pipeline.yml'
      variables:
        path: 'pipeline/aws/variables.sample.yml'
        destination: '($ project $)/pipeline/($ environment $)/variables.yml'
    # Configuration of terraform to setup the infrastructure
    terraform:
      external-worker:
        path: 'terraform/aws/main.tf'
        destination: '($ project $)/terraform/($ environment $)/main.tf'

  azure:
    name: 'Azure'
    description: 'Deployment on Azure.'
    cloud_provider: azurerm
    # Configuration of the CI pipeline
    pipeline:
      pipeline:
        path: 'pipeline/azure/pipeline.yml'
      variables:
        path: 'pipeline/azure/variables.sample.yml'
        destination: '($ project $)/pipeline/($ environment $)/variables.yml'
    # Configuration of terraform to setup the infrastructure
    terraform:
      external-worker:
        path: 'terraform/azure/main.tf'
        destination: '($ project $)/terraform/($ environment $)/main.tf'

  gcp:
    name: 'GCP'
    description: 'Deployment on Google Cloud Platform.'
    cloud_provider: google
    # Configuration of the CI pipeline
    pipeline:
      pipeline:
        path: 'pipeline/gcp/pipeline.yml'
      variables:
        path: 'pipeline/gcp/variables.sample.yml'
        destination: '($ project $)/pipeline/($ environment $)/variables.yml'
    # Configuration of terraform to setup the infrastructure
    terraform:
      external-worker:
        path: 'terraform/gcp/main.tf'
        destination: '($ project $)/terraform/($ environment $)/main.tf'

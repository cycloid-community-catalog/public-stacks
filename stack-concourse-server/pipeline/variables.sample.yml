#
# Terraform
#

# Amazon access to use to run terraform. Usually admin account to be able to create Amazon services.

#. aws_access_key (required): ((aws.access_key))
#+ Amazon AWS access key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_access_key: ((aws.access_key))

#. aws_secret_key (required): ((aws.secret_key))
#+ Amazon AWS secret key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_secret_key: ((aws.secret_key))

#. aws_default_region (required): eu-west-1
#+ Amazon AWS region to use for Terraform.
aws_default_region: eu-west-1

#. terraform_storage_bucket_name (required): ($ organization_canonical $)-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: ($ organization_canonical $)-terraform-remote-state

#. terraform_storage_bucket_path (required): ($ project $)/($ environment $)
#+ AWS S3 bucket path to store terraform remote state file.
terraform_storage_bucket_path: ($ project $)/($ environment $)

#. rds_password (required): ((custom_concourse_server_rds_password))
#+ Password used for your RDS database.
rds_password: ((custom_concourse_server_rds_password))


#
# Ansible
#

#. concourse_server_creds (required): raw_concourse_server_creds
#+ Cycloid raw credential name containing Concourse keys. Expected fields `basic_auth_user`, `basic_auth_password`, `session_signing_key`, `tsa_host_key`, `vault_role_id` and `vault_secret_id`
# Override the path of the key located in Cycloid creds manager.
#
# In this key we expect to have 4 fields:
#  * basic_auth_user: Username to use for basic auth.
#  * basic_auth_password: Password to use for basic auth.
#  * session_signing_key: RSA private key used to sign session tokens.
#  * tsa_host_key: Private key to use for the SSH server.
#  * vault_role_id: Role ID used for Vault auth.
#  * vault_secret_id: Secret ID used for Vault auth.
#
# Which currently correspond to concourse parameters:
#   --basic-auth-username=                                        Username to use for basic auth. [$CONCOURSE_BASIC_AUTH_USERNAME]
#   --basic-auth-password=                                        Password to use for basic auth. [$CONCOURSE_BASIC_AUTH_PASSWORD]
#   --session-signing-key=                                        File containing an RSA private key, used to sign session tokens. [$CONCOURSE_SESSION_SIGNING_KEY]
#   --tsa-host-key=                                               Path to private key to use for the SSH server. [$CONCOURSE_TSA_HOST_KEY]
#   --vault-auth-param=NAME=VALUE                                 Paramter to pass when logging in via the backend. Can be specified multiple times. [$CONCOURSE_VAULT_AUTH_PARAM]
#
# Concourse keys can be generate with the following commands:
#  * tsa_host_key: `ssh-keygen -t rsa -f tsa_host_key -N ''`
#  * session_signing_key: `ssh-keygen -t rsa -f session_signing_key -N ''`
#  /!\ Concourse is not compatible with SSH keys generated with OpenSSH 4.8+
concourse_server_creds: raw_concourse_server_creds


#
# Repos
#

#. config_git_repository (required): git@github.com:MyUser/config-concourse-server.git
#+ Git repository URL containing the config of the stack.
config_git_repository: ssh://APKAJ5QY5LYZNMX5

#. config_git_branch (required): master
#+ Branch of the config Git repository.
config_git_branch: master

#. config_git_private_key (required): ((ssh_codecommit_readonly.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((ssh_codecommit_readonly.ssh_key))

#
# Packer
#

#. debug_public_key: "ssh-rsa ..."
#+ Public SSH key injected by Packer during the build of the AMI for debug purpose
debug_public_key: "ssh-rsa ..."

#. packer_ansible_version: "2.4.3"
#+ Version of ansible used during Packer build to run Ansible playbook
packer_ansible_version: "2.4.3"


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. stack_git_branch (required): master
#+ Branch to use on the public stack git repository
stack_git_branch: master

#. config_ansible_path (required): ($ project $)/ansible
#+ Path of Ansible files in the config git repository
config_ansible_path: ($ project $)/ansible

#. config_terraform_path (required): ($ project $)/terraform/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/($ environment $)

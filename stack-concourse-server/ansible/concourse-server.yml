---

- hosts: localhost
  connection: local
  become: yes

  vars:
    # See telegraf inputs for more plugings https://github.com/influxdata/telegraf/tree/master/plugins/inputs
    # Like https://github.com/influxdata/telegraf/tree/master/plugins/inputs/net_response for tcp port checks
    telegraf_plugins_extra:
      linux_sysctl_fs:
      conntrack:

  vars_files:
    - "environments/default.yml"
    - [ "environments/{{ env }}-concourse-server.yml", "environments/empty.yml" ]

  roles:
    - {role: cycloid.telegraf, tags: telegraf}
    - {role: geerlingguy.docker, tags: docker}
    - {role: cycloid.fluentd, tags: fluentd}

  tasks:
    # jq used by user-data to send cloudformation signal
    - name: Install jq for user-data signal
      apt:
        name: jq
        state: present

    # - name: override the default docker storage
    #   copy:
    #     dest: /etc/docker/daemon.json
    #     content: |
    #       {
    #         "storage-driver": "overlay2"
    #       }

    - name: Adding sysctl config
      lineinfile:
        path: /etc/sysctl.d/99-net.conf
        regexp: "^{{ item.name }}="
        line: "{{ item.name }}={{ item.value }}"
        owner: root
        create: yes
        group: root
        mode: 0644
      with_items: "{{ sysctl_configs }}"

    - name: config path folder | concourse
      file:
        path: "{{ concourse_config_path }}"
        state: directory
        recurse: yes

    - name: tsa host key | concourse
      copy:
        content: "{{ concourse_tsa_host_key }}"
        dest: "{{ concourse_config_path }}/{{ concourse_tsa_host_key_path }}"
        mode: 0400

    - name: session signing key | concourse
      copy:
        content: "{{ concourse_session_signing_key }}"
        dest: "{{ concourse_config_path }}/{{ concourse_session_signing_key_path }}"
        mode: 0400
    
    - name: authorized worker keys | concourse
      block:
        - name: Check if workers_keys dir exists
          local_action:
            module: stat
            path: "{{ playbook_dir }}/files/workers_keys/"
          register: worker_keys_dir

        - name: Assemble workers public keys into a authorized_keys file
          assemble:
            remote_src: false
            src: "{{ playbook_dir }}/files/workers_keys/"
            dest: "{{ concourse_config_path }}/{{ concourse_authorized_worker_keys_path }}"
            mode: 0400
            #validate: '/usr/sbin/ssh-keygen -l -f %s'
          when: worker_keys_dir.stat.exists and worker_keys_dir.stat.isdir

        - name: Fallback empty authorized_keys file
          file:
            path: "{{ concourse_config_path }}/{{ concourse_authorized_worker_keys_path }}"
            mode: 0400
            state: touch
          when: worker_keys_dir.stat.exists == false

    - name: Concourse Server
      include_role:
        name: mhutter.docker-systemd-service
      vars:
        name: concourse-server
        container_name: concourse-server
        container_docker_pull: "{{ docker_pull }}"
        container_image: "{{ concourse_image }}:{{ concourse_version }}"
        container_ports:
          - '2222:2222'
          - '8080:8080'
          # - '8443:8443'
        container_volumes:
          # concourse-authorized-keys
          - "{{ concourse_config_path }}:/opt/concourse"
        container_cmd: "web"
        container_env:
          CONCOURSE_SESSION_SIGNING_KEY: "/opt/concourse/{{ concourse_session_signing_key_path }}"
          CONCOURSE_TSA_HOST_KEY: "/opt/concourse/{{ concourse_tsa_host_key_path }}"
          CONCOURSE_TSA_AUTHORIZED_KEYS: "/opt/concourse/{{ concourse_authorized_worker_keys_path }}"
          CONCOURSE_BASIC_AUTH_USERNAME: "{{ concourse_basic_auth_user }}"
          CONCOURSE_BASIC_AUTH_PASSWORD: "{{ concourse_basic_auth_password }}"
          # CONCOURSE_TLS_CERT: /opt/concourse/ssl.crt
          # CONCOURSE_TLS_KEY: /opt/concourse/ssl.key
          # CONCOURSE_TLS_BIND_PORT: 8443
          # Vault integration
          CONCOURSE_VAULT_URL: "{{ vault_url }}"
          CONCOURSE_VAULT_INSECURE_SKIP_VERIFY: true
          CONCOURSE_VAULT_AUTH_PARAM: "role_id={{ vault_role_id }},secret_id={{ vault_secret_id }}"
          CONCOURSE_VAULT_AUTH_BACKEND: "{{ vault_auth_backend }}"
          CONCOURSE_VAULT_PATH_PREFIX: "{{ vault_auth_prefix }}"
          #CONCOURSE_LOG_LEVEL: error
          #CONCOURSE_TSA_LOG_LEVEL: error
          CONCOURSE_DEFAULT_BUILD_LOGS_TO_RETAIN: "10"
          CONCOURSE_MAX_BUILD_LOGS_TO_RETAIN: "10"
          CONCOURSE_OLD_RESOURCE_GRACE_PERIOD: 5m
          CONCOURSE_RESOURCE_CACHE_CLEANUP_INTERVAL: 30s
          CONCOURSE_PEER_URL: "{{ concourse_peer_url }}"
          CONCOURSE_EXTERNAL_URL: "{{ concourse_external_url }}"
          POSTGRESQL_HOST: "{{ concourse_db_host }}"
          POSTGRESQL_PORT: "{{ concourse_db_port }}"
          POSTGRES_USERNAME: "{{ concourse_db_user }}"
          POSTGRES_PASSWORD: "{{ concourse_db_password }}"
          CONCOURSE_POSTGRES_DATA_SOURCE: "postgres://{{ concourse_db_user }}:{{ concourse_db_password }}@{{ concourse_db_host }}:{{ concourse_db_port }}/{{ concourse_db_name }}?sslmode=disable"
      tags:
        - docker-services
        - notforbuild

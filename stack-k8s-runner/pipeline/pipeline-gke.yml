groups:

- name: overview
  jobs:
  - kubernetes-plan
  - kubernetes-apply

- name: destroy
  jobs:
  - kubernetes-delete

resource_types:

- name: kubernetes
  type: docker-image
  source:
    repository: cycloid/kubernetes-resource
    tag: ((k8s_version))

resources:

- name: git_config-k8s
  type: git
  icon: git
  source:
    uri: ((config_git_repository))
    branch: ((config_git_branch))
    private_key: ((config_git_private_key))
    paths:
      - ((k8s_path))/*

- name: k8s
  type: kubernetes
  icon: kubernetes
  source:
    kubeconfig: ((k8s_kubeconfig))
    gcp_credentials_json: ((gcp_credentials_json))

jobs:

- name: kubernetes-plan
  serial: true
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_config-k8s
        trigger: true

      - task: download gcloud
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine
              tag: latest
          run:
            path: sh
            args:
              - '-exc'
              - |
                apk add -q --no-cache --no-progress bash curl python which
                curl -sSL https://sdk.cloud.google.com > install.sh
                bash install.sh --disable-prompts --install-dir=./gcloud
          outputs:
            - name: gcloud

      - try:
          put: kubectl diff
          resource: k8s
          params:
            kubectl: |
              diff $(grep -rnw git_config-k8s/((k8s_path)) -e 'apiVersion:' --include='*.yaml' --include='*.yml' --files-with-matches | xargs -I % sh -c "echo -f %" )

      - put: kubectl apply dry-run
        resource: k8s
        params:
          kubectl: |
            apply --dry-run=server $(grep -rnw git_config-k8s/((k8s_path)) -e 'apiVersion:' --include='*.yaml' --include='*.yml' --files-with-matches | xargs -I % sh -c "echo -f %" )
          wait_until_ready_selector: ((k8s_wait_ready_selector))

- name: kubernetes-apply
  serial: true
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_config-k8s
        trigger: false
        passed:
          - kubernetes-plan

      - put: kubectl apply
        resource: k8s
        params:
          kubectl: |
            apply $(grep -rnw git_config-k8s/((k8s_path)) -e 'apiVersion:' --include='*.yaml' --include='*.yml' --files-with-matches | xargs -I % sh -c "echo -f %" )
          wait_until_ready_selector: ((k8s_wait_ready_selector))

- name: kubernetes-delete
  serial: true
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_config-k8s
        trigger: false

      - put: kubectl delete
        resource: k8s
        params:
          kubectl: |
            delete $(grep -rnw git_config-k8s/((k8s_path)) -e 'apiVersion:' --include='*.yaml' --include='*.yml' --files-with-matches | xargs -I % sh -c "echo -f %" )
          wait_until_ready_selector: ((k8s_wait_ready_selector))

---

# If "nodevice", root device is used. (no dedicated volume)
var_lib_device: "nodevice"
# if true, search to use /dev/xvdg or /dev/local0. If not found keep the var_lib_device
use_local_device: false

cloud_provider: ""

# Run the mapping/symlink of device via ansible instead of udev. Sould be false if building an ami.
nvme_mapping_run: false


# Cleanup workers at boot
concourse_service_worker_cleaner_enabled: false
concourse_service_watchdog_enabled: true

# user's home where playbooks will be run from
install_user: "{% if ansible_system_vendor == \"Scaleway\" %}root{% else %}admin{% endif %}"
install_user_group: "{{ install_user }}"
install_user_home: "{% if install_user == \"root\" %}/root{% else %}/home/{{ install_user }}{% endif %}"

concourse_worker: yes
# Don't start as we don't want worker to start during the build
concourse_worker_name: "$(hostname)"
concourse_service_enabled: no

concourse_worker_runtime: "guardian"
concourse_worker_dns_server: ""

# Get all options available : /var/lib/concourse/bin/gdn server --help
# CONCOURSE_GARDEN_FOO_BAR=a,b' for '--foo-bar a --foo-bar b'
#concourse_worker_env:
#  CONCOURSE_GARDEN_MAX_CONTAINERS: 1024

concourse_worker_options: "{% if concourse_version is version('5.0', '>=') %}{{ concourse_worker_default_options }}{% else %}{{ concourse_4_worker_default_options }}{% endif %}"

concourse_worker_default_options: |
  --ephemeral \
  --baggageclaim-log-level=error \
  --baggageclaim-volumes={{ concourse_work_dir }}/baggageclaim_volumes \
  --baggageclaim-driver={{ fs_volume_options[fs_volume_type]['bc_driver'] }} 2>&1 | tee -a /var/log/concourse-worker.log ; exit ${PIPESTATUS[0]}

concourse_4_worker_default_options: |
  --ephemeral \
  --garden-network-pool 10.254.0.0/16 \
  --garden-max-containers 1024 \
  --garden-log-level=error \
  --baggageclaim-log-level=error \
  --garden-assets-dir={{ concourse_work_dir }}/garden_assets/ \
  --garden-depot={{ concourse_work_dir }}/garden_depot \
  --baggageclaim-volumes={{ concourse_work_dir }}/baggageclaim_volumes \
  --baggageclaim-driver={{ fs_volume_options[fs_volume_type]['bc_driver'] }} 2>&1 | tee -a /var/log/concourse-worker.log ; exit ${PIPESTATUS[0]}

#concourse_worker_tag: "foo"
#concourse_worker_team: "bar"


concourse_install_dir: /var/lib/concourse
concourse_work_dir: /var/lib/concourse/datas

# Filesystem used to store concourse datas. (currently best perf with btrfs). Possible values "btrfs|ext4"
fs_volume_type: btrfs

fs_volume_options:
  ext4:
    # output used to know if persistent device need to be initialized
    initiate_volume_stdout: 'ext4 filesystem data'
    # command to format to the good filesystem
    mkfs_command: 'mkfs.ext4 -m0'
    # concourse_worker_options baggageclaim-driver
    bc_driver: 'overlay'
    # systemd mount option for concourse datas
    fs_mount_options: 'nobarrier'
  btrfs:
    initiate_volume_stdout: 'BTRFS Filesystem'
    mkfs_command: 'mkfs.btrfs'
    bc_driver: 'btrfs'
    fs_mount_options: 'fatal_errors=panic'

logrotate_scripts:
  - name: concourse-worker
    path: "/var/log/concourse-worker.log"
    options:
      - rotate 2
      - daily
      - missingok
      - compress
      - delaycompress
      - copytruncate

cycloid_files_watched:
  - name: concourse-worker
    path: "/var/log/concourse-worker.log"

sysctl_configs:
  - name: net.ipv4.ip_forward
    value: 1
  - name: net.nf_conntrack_max
    value: 524288

  # https://access.redhat.com/solutions/726753
  - name: net.ipv4.tcp_retries2
    value: 8

  #  We can't change the local_port_range without changing the NodePort range
  # "# Allowed local port range",
  - name: net.ipv4.ip_local_port_range
    value: "32768    65535"

  #- name: net.ipv4.tcp_max_tw_buckets
  #  value: 2000000

  #  Increase the number of connections
  - name: net.core.somaxconn
    value: 32768

  # Maximum Socket Receive Buffer
  - name: net.core.rmem_max
    value: 16777216

  # Default Socket Send Buffer
  - name: net.core.wmem_max
    value: 16777216

  # Increase the maximum total buffer-space allocatable
  - name: net.ipv4.tcp_wmem
    value: "4096 12582912 16777216"
  - name: net.ipv4.tcp_rmem
    value: "4096 12582912 16777216"


   # Increase the number of outstanding syn requests allowed
  - name: net.ipv4.tcp_max_syn_backlog
    value: 8096

   # Max number of packets that can be queued on interface input",
   # If kernel is receiving packets faster than can be processed",
   # this queue increases",
  - name: net.core.netdev_max_backlog
    value: 16384

   # Increase size of file handles and inode cache",
  - name: fs.file-max
    value: 2097152

  # Max number of inotify instances and watches for a user",
  # e.g. uses of inotify: nginx ingress controller, kubectl logs -f",
  - name: fs.inotify.max_user_instances
    value: 8192
  - name: fs.inotify.max_user_watches
    value: 524288

  #  A higher vm.max_map_count is great for elasticsearch, mongo, or other mmap users
  #  See https://github.com/kubernetes/kops/issues/1340
  - name: vm.max_map_count
    value: 262144

# This var is sent by the pipeline
# concourse_version: 3.9.2

#
# Require override
#

#concourse_tsa_host: "have to be set"
#concourse_tsa_public_key: "pub_key"
#concourse_tsa_worker_key: "worker key"

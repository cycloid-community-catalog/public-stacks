#
# Terraform
#

# Scaleway access to use to run terraform.

#. scw_access_key (required): ((scaleway.access_key))
#+ Scaleway access key for Terraform. See [here](https://console.scaleway.com/project/credentials).
scw_access_key: ((scaleway.access_key))

#. scw_secret_key (required): ((scaleway.secret_key))
#+ Scaleway secret key for Terraform. See [here](https://console.scaleway.com/project/credentials).
scw_secret_key: ((scaleway.secret_key))

#. scw_organization_id (required): ((scaleway.organization_id))
#+ Scaleway organization ID for Terraform. See [here](https://console.scaleway.com/account/organization/profile).
scw_organization_id: ((scaleway.organization_id))

#. scw_project_id (required): ((scaleway.project_id))
#+ Scaleway project ID for Terraform. See [here](https://console.scaleway.com/project/settings)
scw_project_id: ((scaleway.project_id))

#. scw_default_region (required): fr-par
#+ Scaleway region to use for Terraform.
scw_default_region: fr-par

#. terraform_storage_bucket_name (required): ($ organization_canonical $)-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: ($ organization_canonical $)-terraform-remote-state

#
# Ansible
#

#. scheduler_api_address (required): https://myscheduler.com
#+ URL of the Pipeline scheduler API
scheduler_api_address: https://myscheduler.com

#. scheduler_host (required): "myscheduler.com"
#+ Host or IP of the Pipeline scheduler
scheduler_host: "myscheduler.com"

#. scheduler_port (required): 2222
#+ Port of the Pipeline scheduler
scheduler_port: "2222"

#. external_worker_key (required, cycloid_creds_name): cycloid-worker-keys
#+ Name of the Cycloid credential containing a public and a private SSH key to configure Cycloid workers.
# If you use Cycloid SaaS version, your organization should contain by default a Cycloid credential named `cycloid-worker-keys`
# In this credential we expect to have 2 fields:
#  * ssh_pub: Public ssh key of the scheduler server.
#  * ssh_prv: Private ssh key used by your worker.
# Which currently correspond to concourse parameters :
#          --tsa-public-key=                                  File containing a public key to expect from the TSA. [$CONCOURSE_TSA_PUBLIC_KEY]
#          --tsa-worker-private-key=                          File containing the private key to use when authenticating to the TSA. [$CONCOURSE_TSA_WORKER_PRIVATE_KEY]
external_worker_key: cycloid-worker-keys

#
# Packer
#

#. debug_public_key: "ssh-rsa ..."
#+ Public ssh key injected by Packer during the build of the AMI for debug purpose
debug_public_key: "ssh-rsa ..."

#. packer_ansible_version: "2.9.*"
#+ Version of ansible used during Packer build to run Ansible playbook
packer_ansible_version: "2.9.*"

#. packer_scw_zone: "fr-par-1"
#+ Packer specific naming for the Scaleway zone to use. The image built will only be usable in this zone, so make sure it matches the one in `scw_default_region`.
packer_scw_zone: fr-par-1

#
# Repos
#

#. config_git_repository (required): git@github.com:MyUser/config-external-workers.git
#+ Git repository URL containing the config of the stack.
config_git_repository: git@github.com:MyUser/config-external-workers.git

#. config_git_branch (required): master
#+ Branch of the config git repository.
config_git_branch: master

#. config_git_private_key (required): ((ssh_config.ssh_key))
#+ SSH key pair to fetch the config git repository.
config_git_private_key: ((ssh_config.ssh_key))


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. stack_git_branch (required): master
#+ Branch to use on the public stack git repository
stack_git_branch: master

#. config_ansible_path (required): ($ project $)/ansible
#+ Path of Ansible files in the config git repository
config_ansible_path: ($ project $)/ansible

#. config_terraform_path (required): ($ project $)/terraform/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/($ environment $)

#. terraform_version (required): '0.13.5'
#+ terraform version used to execute your code.
terraform_version: '1.0.7'

#. packer_version (required): '1.8.0'
#+ packer version used to build the instance image.
packer_version: '1.8.0'

# YAML anchors
shared:
  - &task-merge-stack-and-config
    task: merge-stack-and-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: latest
      run:
        path: /usr/bin/merge-stack-and-config
      inputs:
        - name: git_config
          path: "config"
        - name: git_stack
          path: "stack"
      outputs:
        - name: merged-stack
          path: "merged-stack"
    params:
      CONFIG_PATH: ((project))/terraform/((env))
      STACK_PATH: terraform/aws

groups:
- name: overview
  jobs:
  - terraform-plan
  - terraform-apply
- name: destroy
  jobs:
  - terraform-destroy

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: '1.0.3'

resources:
- name: tfstate
  type: terraform
  source:
    env_name: ((env))
    backend_type: s3
    backend_config:
      bucket: ((terraform_storage_bucket_name))
      key: terraform.tfstate
      workspace_key_prefix: ((project))
      region: ((aws_default_region))
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
    vars:
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
      aws_region: ((aws_default_region))
      env: ((env))
      project: ((project))
      customer: ((customer))

# The Terraform stack (will be merged with the config)
- name: git_stack
  type: git
  source:
    uri: https://github.com/cycloid-community-catalog/stack-getting-started.git
    branch: ((stack_git_branch))

# The Terraform config (will be merged with the stack)
- name: git_config
  type: git
  source:
    uri: ((git_repository))
    branch: ((config_git_branch))
    private_key: ((git_ssh_key))
    paths:
      - ((project))/terraform/((env))/*

jobs:
  - name: terraform-plan
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack
          trigger: true
        - get: git_config
          trigger: true
        - *task-merge-stack-and-config
        - put: tfstate
          params:
            plan_only: true
            terraform_source: merged-stack/

  - name: terraform-apply
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack
          trigger: false
          passed:
            - terraform-plan
        - get: git_config
          trigger: false
          passed:
            - terraform-plan
        - get: tfstate
          trigger: true
          passed:
            - terraform-plan
        - *task-merge-stack-and-config
        - put: tfstate
          params:
            plan_run: true
            terraform_source: merged-stack/

  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack
            trigger: false
          - get: git_config
            trigger: false
          - *task-merge-stack-and-config
          - put: tfstate
            params:
              action: destroy
              terraform_source: merged-stack/
            get_params:
              action: destroy

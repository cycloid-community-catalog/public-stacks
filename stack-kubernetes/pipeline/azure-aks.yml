# YAML anchors
shared:

  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

groups:

- name: overview
  jobs:
  - terraform-plan
  - terraform-apply

- name: destroy
  jobs:
  - terraform-destroy

resource_types:

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: ((terraform_version))

resources:

- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ((env))
    backend_type: azurerm
    backend_config:
      container_name: ((terraform_storage_container_name))
      key: ((terraform_storage_container_path))/((project))-((env)).tfstate
      resource_group_name: ((terraform_resource_group_name))
      storage_account_name: ((terraform_storage_account_name))
      access_key: ((terraform_storage_access_key))
    vars:
      aks_service_principal_client_id: ((aks_service_principal_client_id))
      aks_service_principal_client_secret: ((aks_service_principal_client_secret))
      azure_location: ((azure_location))
      azure_env: ((azure_env))
      azure_client_id: ((azure_client_id))
      azure_client_secret: ((azure_client_secret))
      azure_subscription_id: ((azure_subscription_id))
      azure_tenant_id: ((azure_tenant_id))
      env: ((env))
      project: ((project))
      customer: ((customer))

# The Terraform stack (will be merged with the config)
- name: git_stack-terraform
  type: git
  icon: git
  source:
    uri: https://github.com/cycloid-community-catalog/stack-kubernetes.git
    branch: ((stack_git_branch))
    paths:
      - terraform/azure-aks/*

# The Terraform config (will be merged with the stack)
- name: git_config-terraform
  type: git
  icon: git
  source:
    uri: ((config_git_repository))
    branch: ((config_git_branch))
    private_key: ((config_git_private_key))
    paths:
      - ((config_terraform_path))/*

jobs:

# Merge and trigger a plan whenever there is a commit in Terraform stack or config
- name: terraform-plan
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_stack-terraform
        trigger: true
      - get: git_config-terraform
        trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: terraform/azure-aks

      - put: tfstate
        params:
          plan_only: true
          terraform_source: merged-stack/

# Merge and trigger an apply manually (no autostart of this job)
- name: terraform-apply
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_stack-terraform
        trigger: false
        passed:
          - terraform-plan
      - get: git_config-terraform
        trigger: false
        passed:
          - terraform-plan
      - get: tfstate
        trigger: false
        passed:
          - terraform-plan

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: terraform/azure-aks

      - put: tfstate
        params:
          plan_run: true
          terraform_source: merged-stack/

- name: terraform-destroy
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_stack-terraform
        trigger: false
      - get: git_config-terraform
        trigger: false
      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ((config_terraform_path))
          STACK_PATH: terraform/azure-aks

      - put: tfstate
        params:
          action: destroy
          terraform_source: merged-stack/
        get_params:
          action: destroy